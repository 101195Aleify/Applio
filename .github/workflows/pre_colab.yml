name: Cache Python Dependencies

on:
  workflow_dispatch:

jobs:
  Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Free up space on runner
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Read version from config.json
        id: get-version
        run: |
          version=$(jq -r '.version' assets/config.json)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create virtual environment
        run: |
          sudo apt-get install -y pigz
          sudo apt-get install -y pv
          pip install huggingface_hub
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install "pip<24.1"
          python -m pip install -r requirements.txt
          python -m pip uninstall torch torchvision torchaudio -y
          python -m pip install torch==2.1.1 torchvision==0.16.1 torchaudio==2.1.1 --index-url https://download.pytorch.org/whl/cu121
          python core.py "prerequisites" --models "True" --pretraineds_v1 "False" --pretraineds_v2 "True" --exe "False"
          python -m pip cache purge
          find . -type f -name '*.py[co]' -delete -o -type d -name __pycache__ -delete
          deactivate
          rm -f .venv/pyvenv.cfg
          rm -f .venv/bin/activate
          rm -f .venv/bin/activate.bat
          rm -f .venv/bin/activate.csh
          rm -f .venv/bin/activate.fish
          rm -f .venv/bin/activate.nu
          rm -f .venv/bin/activate.ps1
          rm -f .venv/bin/activate_this.py
          rm -f .venv/bin/deactivate.bat
          rm -f .venv/bin/pydoc.bat
          rm -f .venv/bin/python
          rm -f .venv/bin/python3
          rm -f .venv/bin/python3.10
          
      
      - name: Clean up unnecessary files
        run: |
          rm -f LICENSE run-tensorboard.bat run-install.bat run-applio.bat run-install.sh requirements.txt .gitignore
          rm -rf .github .git

      - name: Create ZIP file
        run: |
          zip -9 -r ApplioV${{ steps.get-version.outputs.version }}.zip .

      - name: Upload Linux Compiled
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          version: ${{ steps.get-version.outputs.version }}
        run: |
          python -c "
          import os
          from huggingface_hub import login, upload_file
            
          token = os.getenv('HF_TOKEN')
          version = os.getenv('version')
          login(token)
          repo_id = 'vidalnt/nothing'
          repo_file_path = f'ApplioV{version}.zip'
            
          upload_file(
          commit_message=f'{version}',
          path_or_fileobj=repo_file_path,
          path_in_repo=f'Compiled/Linux/ApplioV{version}.zip',
          repo_id=repo_id,
          token=token)
          "